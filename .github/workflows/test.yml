name: Push Validation
on:
  push:
    branches:
      - master
      - linter_4
  pull_request:

env:
  PYTHON_VERSION: "3.11"
  CODE_DIR: src
  JUNIT_OUTPUT_FILENAME: junit-report.xml
  JUNIT_REPORT_ARTIFACT_NAME: junit-report

jobs:
  # Lint commit messages to check if they follow conventional commit
  check:
    uses: lieblings-app/actions/.github/workflows/lint.yml@master
    with:
      commitlint-args: --from HEAD~${{ github.event.pull_request.commits }} --to HEAD --verbose

  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          cache: "pip" # caching pip dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt -r requirements-dev.txt
      - uses: pre-commit/action@v3.0.0
      # - name: Upload lint results
      #   uses: actions/upload-artifact@v3
      #   if: ${{ failure() }}
      #   with:
      #     name: lint-results
      #     path: ${{ env.LINT_OUTPUT_FILEPATH}}

  test:
    env:
      MIN_TEST_COVERAGE: 70
      TEST_DIR: tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          cache: "pip" # caching pip dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt -r requirements-dev.txt
      - name: Run tests
        run: pytest ${{ env.TEST_DIR }} --junitxml=${{ env.JUNIT_OUTPUT_FILENAME }} --cov=${{ env.CODE_DIR }} --cov-report=xml --cov-report=html --cov-fail-under=${{ env.MIN_TEST_COVERAGE }}
      - name: Upload test results
        uses: actions/upload-artifact@v3
        if: ${{ failure() }}
        with:
          name: ${{ env.JUNIT_REPORT_ARTIFACT_NAME }}
          path: ${{ env.JUNIT_OUTPUT_FILENAME }}

  add_annotations_in_pr:
    needs:
      - test
    if: ${{ failure() && github.event_name == 'pull_request' }}
    runs-on: ubuntu-latest
    permissions:
      checks: write
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: ${{ env.JUNIT_REPORT_ARTIFACT_NAME }}
      - name: Publish Test Report
        uses: mikepenz/action-junit-report@v4
        with:
          report_paths: ${{ env.JUNIT_OUTPUT_FILENAME }}
